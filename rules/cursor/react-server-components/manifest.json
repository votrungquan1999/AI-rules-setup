{
  "id": "react-server-components",
  "category": "react-server-components",
  "tags": [
    "react",
    "react-18",
    "react-19",
    "patterns",
    "server-components",
    "rsc",
    "server-side",
    "ssr",
    "client-components",
    "use-client",
    "client-server-separation",
    "server-client",
    "nextjs",
    "next",
    "nextjs-13",
    "nextjs-14",
    "nextjs-15",
    "app-router",
    "composition",
    "composition-pattern",
    "data-fetching",
    "async",
    "async-components",
    "streaming",
    "suspense",
    "performance",
    "best-practices",
    "conventions"
  ],
  "description": "React Server Components best practices for Next.js App Router covering server vs client component usage patterns, composition strategies, data fetching in server components, async component patterns, streaming and suspense, client-server boundary separation, performance optimization, component architecture for Next.js 13+ with TypeScript support",
  "version": "1.0.0",
  "lastUpdated": "2025-01-17T00:00:00Z",
  "files": [
    {
      "path": "server-components-rules.mdc",
      "description": "Core Server Components rules and usage patterns",
      "required": true
    },
    {
      "path": "composition-patterns.mdc",
      "description": "Component composition patterns and examples",
      "required": true
    },
    {
      "path": "client-server-separation.mdc",
      "description": "Client/server component separation patterns and best practices",
      "required": true
    }
  ],
  "dependencies": ["typescript-conventions"],
  "conflicts": ["react-class-components"]
}
